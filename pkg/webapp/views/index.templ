package views

templ Index() {
    <!DOCTYPE html>
    <html lang="en">
        @head()
        @tgInit()
        @style()
        @indexBody()
    </html>
}

templ style() {
    <style>
         /* Customize Pico CSS variables if needed */
         :root {
             /* Example: Customize primary color */
             /* --pico-primary: #0172ad; */ /* Default value */
             /* --pico-primary: #0172ad; */ /* Default value */
             /* --pico-primary-hover: #015887; */
             /* You can uncomment and change these values to customize the theme */
         }

         /* Use Pico CSS variables for success and error text colors */
         .text-success {
             color: var(--pico-ins-color); /* Greenish color for positive amounts */
         }
         .text-error {
             color: var(--pico-del-color); /* Reddish color for negative amounts */
         }
     </style>
}


templ head() {
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1.0" />
        <title>McDuck Wallet WebApp</title>
        <meta name="color-scheme" content="light dark">
        <link
          rel="stylesheet"
          href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.classless.pink.min.css"
        >
        <script src="https://unpkg.com/htmx.org@2.0.2" integrity="sha384-Y7hw+L/jvKeWIRRkqWYfPcvVxHzVzn5REgzbawhxAuQGwX1XWe70vji+VSeHOThJ" crossorigin="anonymous"></script>
        <script src="https://telegram.org/js/telegram-web-app.js"></script>
    </head>
}

templ tgInit() {
    <script>
    document.addEventListener('DOMContentLoaded', () => {
        let tg = window.Telegram.WebApp;
        tg.expand();
        tg.BackButton.hide();

        // Set the color scheme to match the user's theme
        const theme = tg.colorScheme; // "light" or "dark"
        document.documentElement.setAttribute('data-theme', theme);

        // Add the Telegram initData to the request as a header
        htmx.on("htmx:configRequest", (e) => {
            e.detail.headers["X-Telegram-Init-Data"] = tg.initData;
        });

        // Manage loading state


        htmx.on('htmx:afterOnLoad', function(evt) {
            const balanceContainer = document.getElementById('balance-container');
            balanceContainer.setAttribute('aria-busy', 'false');
        });

        tg.ready();
    });
    </script>
}

templ indexBody() {
    <body>
        <main style="display: flex; flex-direction: column; min-height: 100vh;">
            <h2>Your Balances</h2>
            <!-- Loading message and balances section -->
            <div id="balance-container" hx-get="/balance" hx-trigger="intersect once" aria-busy="true">
            </div>
            <div style="flex-grow: 1;"></div>
            <div style="text-align: center;">
                <button hx-get="/history" hx-target="body">
                    Transaction History
                </button>
            </div>
        </main>
    </body>
}
