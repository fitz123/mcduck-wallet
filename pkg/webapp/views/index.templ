package views

import "github.com/fitz123/mcduck-wallet/pkg/database"

templ head() {
	<head>
		<meta charset="UTF-8"/>
		<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
		<title>McDuck Wallet WebApp</title>
		<meta name="color-scheme" content="light dark"/>
		<link
			rel="stylesheet"
			href="https://cdn.jsdelivr.net/npm/@picocss/pico@2/css/pico.classless.pink.min.css"
		/>
		<script src="https://unpkg.com/htmx.org@2.0.2" integrity="sha384-Y7hw+L/jvKeWIRRkqWYfPcvVxHzVzn5REgzbawhxAuQGwX1XWe70vji+VSeHOThJ" crossorigin="anonymous"></script>
		<script src="https://telegram.org/js/telegram-web-app.js"></script>
	</head>
}

templ style() {
	<style>
         /* Use Pico CSS variables for success and error text colors */
         .text-success {
             color: var(--pico-ins-color); /* Greenish color for positive amounts */
             background-color: var(--pico-ins-background)
         }
         .text-error {
             color: var(--pico-del-color); /* Reddish color for negative amounts */
             background-color: var(--pico-del-background)
         }
    </style>
}

templ tgInit() {
	<script>
    document.addEventListener('DOMContentLoaded', () => {
        let tg = window.Telegram.WebApp;
        tg.expand();

        tg.BackButton.hide();

        // Set the color scheme to match the user's theme
        const theme = tg.colorScheme; // "light" or "dark"
        document.documentElement.setAttribute('data-theme', theme);

        // Add the Telegram initData to the request as a header
        htmx.on("htmx:configRequest", (e) => {
            e.detail.headers["X-Telegram-Init-Data"] = tg.initData;
        });

        // Initial load of authenticated content
        htmx.ajax('GET', '/balance', {target: '#main-content', swap: 'innerHTML'});

        tg.ready();
    });
    </script>
}

templ InitialLoadingIndex() {
	<!DOCTYPE html>
	<html lang="en">
		@head()
		@tgInit()
		@style()
		<body>
			<main>
				<div id="main-content"></div>
			</main>
		</body>
	</html>
}

templ MainContent(balances []database.Balance, alertMessage string, isSuccess bool) {
	<main>
		<div id="main-content">
			<header>
				<h2>McDuck Wallet!</h2>
			</header>
			<section id="balance-container">
				@Balances(balances)
			</section>
			if alertMessage != "" {
				@TransferAlert(alertMessage, isSuccess)
			}
			<footer>
				<nav>
					<ul>
						<li><button hx-get="/transfer-form" hx-target="#main-content">Transfer Money</button></li>
						<li><button hx-get="/history" hx-target="#main-content">Transaction History</button></li>
					</ul>
				</nav>
			</footer>
		</div>
	</main>
}
