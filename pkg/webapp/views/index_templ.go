// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.778
package views

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Index() templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		if templ_7745c5c3_CtxErr := ctx.Err(); templ_7745c5c3_CtxErr != nil {
			return templ_7745c5c3_CtxErr
		}
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html lang=\"en\"><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><title>McDuck Wallet WebApp</title><link href=\"https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&amp;display=swap\" rel=\"stylesheet\"><script src=\"https://unpkg.com/htmx.org@1.9.9\" integrity=\"sha384-QFjmbokDn2DjBjq+fM+8LUIVrAgqcNW2s0PjAxHETgRn9l4fvX31ZxDxvwQnyMOX\" crossorigin=\"anonymous\"></script><script src=\"https://telegram.org/js/telegram-web-app.js\"></script><script>\n            document.addEventListener('DOMContentLoaded', () => {\n                console.log(\"DOMContentLoaded event fired\");\n\n                let tg = window.Telegram.WebApp;\n                console.log(\"Telegram WebApp object:\", tg);\n                tg.expand();\n                tg.BackButton.hide();\n\n                // Add the Telegram initData to the request as a header\n                htmx.on(\"htmx:configRequest\", (e) => {\n                    console.log(\"Setting Telegram init data\");\n                    e.detail.headers[\"X-Telegram-Init-Data\"] = tg.initData;\n                });\n            });\n            </script><style>\n                /* Root variables for colors and fonts */\n                :root {\n                    --primary-color: #4a90e2;\n                    --background-color: #f5f7fa;\n                    --card-background: #ffffff;\n                    --text-color: #4f4f4f;\n                    --text-muted-color: #777777;\n                    --success-color: #66e784;\n                    --error-color: #f48377;\n                    --border-radius: 8px;\n                    --box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n                    --font-family: \"Roboto\", sans-serif;\n                }\n\n                body {\n                    font-family: var(--font-family);\n                    margin: 0;\n                    padding: 20px;\n                    background-color: var(--background-color);\n                    color: var(--text-color);\n                }\n\n                .balance-section,\n                .transaction-history {\n                    background-color: var(--card-background);\n                    padding: 20px;\n                    border-radius: var(--border-radius);\n                    box-shadow: var(--box-shadow);\n                    margin-bottom: 20px;\n                }\n\n                .balance-section {\n                    text-align: center;\n                }\n\n                .total-balance {\n                    font-size: 16px;\n                    color: var(--text-muted-color);\n                    margin-bottom: 10px;\n                    font-weight: 500;\n                }\n\n                .balance-amount {\n                    font-size: 42px;\n                    font-weight: 700;\n                    margin-bottom: 5px;\n                    color: var(--primary-color);\n                    display: flex;\n                    align-items: center;\n                    justify-content: center;\n                }\n\n                .currency-sign {\n                    color: var(--text-muted-color);\n                    font-size: 32px; /* Adjust this value as needed */\n                    margin-right: 2px; /* Add a small space between sign and amount */\n                    position: relative;\n                    top: -2px; /* Fine-tune vertical alignment if necessary */\n                }\n\n                .currency-name {\n                    font-size: 14px;\n                    color: var(--text-muted-color);\n                }\n\n                .send-btn {\n                    background-color: var(--primary-color);\n                    color: white;\n                    border: none;\n                    padding: 12px 24px;\n                    border-radius: 30px;\n                    font-size: 16px;\n                    cursor: pointer;\n                    margin-top: 20px;\n                    transition: background-color 0.2s ease;\n                }\n\n                .send-btn:hover {\n                    background-color: #357abd;\n                }\n\n                .transaction-history {\n                    display: flex;\n                    align-items: center;\n                    cursor: pointer;\n                    justify-content: center;\n                }\n\n                .transaction-history-icon {\n                    margin-right: 10px;\n                    font-size: 24px;\n                    color: var(--primary-color);\n                }\n\n                .transfer-form {\n                    display: none;\n                    margin-top: 20px;\n                    text-align: left;\n                }\n\n                .input {\n                    width: 100%;\n                    padding: 12px 15px;\n                    margin-bottom: 15px;\n                    border: 1px solid #dddfe2;\n                    border-radius: var(--border-radius);\n                    font-size: 16px;\n                    font-family: var(--font-family);\n                    box-sizing: border-box;\n                }\n\n                .message {\n                    padding: 15px;\n                    margin: 15px 0;\n                    border-radius: var(--border-radius);\n                    font-size: 16px;\n                }\n\n                .success {\n                    color: var(--success-color);\n                    background-color: #e6f3e6;\n                    border: 1px solid var(--success-color);\n                }\n\n                .error {\n                    color: var(--error-color);\n                    background-color: #fce8e6;\n                    border: 1px solid var(--error-color);\n                }\n            </style></head><body><div id=\"main-content\">")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = MainContent().Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</div></body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}

var _ = templruntime.GeneratedTemplate
